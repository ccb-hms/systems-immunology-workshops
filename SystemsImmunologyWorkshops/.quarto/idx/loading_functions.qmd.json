{"title":"Reading data into R","markdown":{"headingText":"Reading data into R","containsRefs":false,"markdown":"\n### The basics\n\nRegardless of the specific analysis in R we are performing, we usually need to bring data in for any analysis being done in R, so learning how to read in data is a crucial component of learning to use R.\n\nMany functions exist to read data in, and the function in R you use will depend on the file format being read in. Below we have a table with some examples of functions that can be used for importing some common text data types (plain text).\n\n| Data type               | Extension | Function       | Package           |\n|:------------------------|:----------|:---------------|:------------------|\n| Comma separated values  | csv       | `read.csv()`   | utils (default)   |\n|                         |           | `read_csv()`   | readr (tidyverse) |\n| Tab separated values    | tsv       | `read_tsv()`   | readr             |\n| Other delimited formats | txt       | `read.table()` | utils             |\n|                         |           | `read_table()` | readr             |\n|                         |           | `read_delim()` | readr             |\n\nFor example, if we have text file where the columns are separated by commas (comma-separated values or comma-delimited), you could use the function `read.csv`. However, if the data are separated by a different delimiter in a text file (e.g. \":\", \";\", \" \"), you could use the generic `read.table` function and specify the delimiter (`sep = \" \"`) as an argument in the function.\n\nIn the above table we refer to base R functions as being contained in the \"utils\" package. In addition to base R functions, we have also listed functions from some other packages that can be used to import data, specifically the \"readr\" package that installs when you install the \"tidyverse\" suite of packages.\n\nIn addition to plain text files, you can also import data from other statistical analysis packages and Excel using functions from different packages.\n\n| Data type           | Extension | Function          | Package            |\n|:--------------------|:----------|:------------------|:-------------------|\n| Stata version 13-14 | dta       | `readdta()`       | haven              |\n| Stata version 7-12  | dta       | `read.dta()`      | foreign            |\n| SPSS                | sav       | `read.spss()`     | foreign            |\n| SAS                 | sas7bdat  | `read.sas7bdat()` | sas7bdat           |\n| Excel               | xlsx, xls | `read_excel()`    | readxl (tidyverse) |\n\nNote, that these lists are not comprehensive, and may other functions exist for importing data. Once you have been using R for a bit, maybe you will have a preference for which functions you prefer to use for which data type.\n\n### Metadata\n\nWhen working with large datasets, you will very likely be working with \"metadata\" file which contains the information about each sample in your dataset.\n\n<img src=\"img/metadata_view.png\" width=\"400\"/>\n\nThe metadata is very important information and we encourage you to think about creating a document with as much metadata you can record before you bring the data into R. [Here is some additional reading on metadata](https://datamanagement.hms.harvard.edu/metadata-overview) from the [HMS Data Management Working Group](https://datamanagement.hms.harvard.edu/).\n\n## read.csv()\n\nYou can check the arguments for the function using the `?` to ensure that you are entering all the information appropriately:\n\n``` r\n?read.csv\n```\n\n<img src=\"img/read.table-help.png\" width=\"450\"/>\n\nThe first thing you will notice is that you've pulled up the documentation for `read.table()`, this is because that is the parent function and all the other functions are in the same family.\n\nThe next item on the documentation page is the function **Description**, which specifies that the output of this set of functions is going to be a **data frame** - \"*Reads a file in table format and **creates a data frame from it**, with cases corresponding to lines and variables to fields in the file.*\"\n\nIn usage, all of the arguments listed for `read.table()` are the default values for all of the family members unless otherwise specified for a given function. Let's take a look at 2 examples: 1. **The separator** - \\* in the case of `read.table()` it is `sep = \"\"` (space or tab) \\* whereas for `read.csv()` it is `sep = \",\"` (a comma). 2. **The `header`** - This argument refers to the column headers that may (`TRUE`) or may not (`FALSE`) exist **in the plain text file you are reading in**. \\* in the case of `read.table()` it is `header = FALSE` (by default, it assumes you do not have column names) \\* whereas for `read.csv()` it is `header = TRUE` (by default, it assumes that all your columns have names listed).\n\n***The take-home from the \"Usage\" section for `read.csv()` is that it has one mandatory argument, the path to the file and filename in quotations; in our case that is `data/mouse_exp_design.csv` or `data/mouse_exp_design.txt`.***\n\n------------------------------------------------------------------------\n\n#### Note on `stringsAsFactors`\n\nNote that the `read.table {utils}` family of functions has an argument called `stringsAsFactors`, which by default will take the value of `default.stringsAsFactors()`.\n\nType out `default.stringsAsFactors()` in the console to check what the default value is for your current R session. Is it `TRUE` or `FALSE`?\n\nIf `default.stringsAsFactors()` is set to `TRUE`, then `stringsAsFactors = TRUE`. In that case any function in this family of functions will coerce `character` columns in the data you are reading in to `factor` columns (i.e. coerce from `vector` to `factor`) in the resulting data frame.\n\nIf you want to maintain the `character vector` data structure (e.g. for gene names), you will want to make sure that `stringsAsFactors = FALSE` (or that `default.stringsAsFactors()` is set to `FALSE`).\n\n### List of functions for data inspection\n\nWe already saw how the functions `head()` and `str()` (in the releveling section) can be useful to check the content and the structure of a `data.frame`. Below is a non-exhaustive list of functions to get a sense of the content/structure of data. The list has been divided into functions that work on all types of objects, some that work only on vectors/factors (1 dimensional objects), and others that work on data frames and matrices (2 dimensional objects).\n\nWe have some exercises below that will allow you to gain more familiarity with these. You will definitely be using some of them in the next few homework sections.\n\n-   All data structures - content display:\n    -   **`str()`:** compact display of data contents (similar to what you see in the Global environment)\n    -   **`class()`:** displays the data type for vectors (e.g. character, numeric, etc.) and data structure for dataframes, matrices, lists\n    -   **`summary()`:** detailed display of the contents of a given object, including descriptive statistics, frequencies\n    -   **`head()`:** prints the first 6 entries (elements for 1-D objects, rows for 2-D objects)\n    -   **`tail()`:** prints the last 6 entries (elements for 1-D objects, rows for 2-D objects)\n-   Vector and factor variables:\n    -   **`length()`:** returns the number of elements in a vector or factor\n-   Dataframe and matrix variables:\n    -   **`dim()`:** returns dimensions of the dataset (number_of_rows, number_of_columns) \\[Note, row numbers will always be displayed before column numbers in R\\]\n    -   **`nrow()`:** returns the number of rows in the dataset\n    -   **`ncol()`:** returns the number of columns in the dataset\n    -   **`rownames()`:** returns the row names in the dataset\\\n    -   **`colnames()`:** returns the column names in the dataset\n\n------------------------------------------------------------------------\n\n*The materials in this lesson have been adapted from work created by the (HBC)\\](http://bioinformatics.sph.harvard.edu/) and Data Carpentry (http://datacarpentry.org/). These are open access materials distributed under the terms of the [Creative Commons Attribution license](https://creativecommons.org/licenses/by/4.0/) (CC BY 4.0), which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.*\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"loading_functions.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}},"pdf":{"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"loading_functions.pdf"},"language":{},"metadata":{"block-headings":true,"editor":"visual","documentclass":"scrreprt"},"extensions":{"book":{}}}}}